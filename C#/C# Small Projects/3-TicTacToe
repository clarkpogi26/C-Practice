using System.Threading;
using System.Collections.Generic;
string[] box = new string[9] { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
bool isPlayerTurn = true;
int numTurns = 0;
int X = 0;
int O = 0;
Random random = new Random();
while (true)
{
    Thread.Sleep(200);
    Console.Clear();
    PrintGrid();
    if (isPlayerTurn)
    {
        Console.WriteLine("Player 1 turn!");
        string choice = Console.ReadLine();
        bool isValid = int.TryParse(choice, out int boxIndex) && boxIndex >= 1 && boxIndex <= 9;
        if (!isValid)
        {
            Console.WriteLine("Invalid");
            continue;
        }
        boxIndex--;
        if (box[boxIndex] == "X" || (box[boxIndex] == "O"))
        {
            Console.WriteLine("Already Taken");
            continue;
        }
        if (isPlayerTurn)
        {
            Console.ForegroundColor = ConsoleColor.Red;
            box[boxIndex] = "X";
        }
    }
    else
    {
        Console.WriteLine("Computer is thinking...");
        Thread.Sleep(1000);
        int move = ChatGPT();
        if (move != -1)
        {
            Console.ForegroundColor = ConsoleColor.Green;
            box[move] = "O";
        }
    }
            numTurns++;

        if (CheckVictory())
        {
            if (isPlayerTurn)
                X++;
            else
                O++;
            Console.WriteLine(isPlayerTurn ? "Player Won" : "Computer Won");
            Console.WriteLine($"Current Score: X: {X} | O: {O}");
            Console.Write("Play Again? (y/n)");
            string replay = Console.ReadLine().ToLower().Trim();
            if (replay == "y")
            {
            Console.ForegroundColor = ConsoleColor.Green;
            box = new string[9] { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
                numTurns = 0;
                isPlayerTurn = true;
                continue;
            }
            else
        {
            Console.WriteLine("Thanks for playing!");
            Thread.Sleep(2000);
            break;
        }
        }

        if (numTurns == 9)
        {
        Console.WriteLine("Tie");
        Console.ForegroundColor = ConsoleColor.Green;
        box = new string[9] { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
        isPlayerTurn = true;
        numTurns = 0;
        continue;
        }
        isPlayerTurn = !isPlayerTurn;
}
bool CheckVictory()
    {
        bool row1 = box[0] == box[1] && box[1] == box[2];
        bool row2 = box[3] == box[4] && box[4] == box[5];
        bool row3 = box[6] == box[7] && box[7] == box[8];
        bool col1 = box[0] == box[3] && box[3] == box[6];
        bool col2 = box[1] == box[4] && box[4] == box[7];
        bool col3 = box[2] == box[5] && box[5] == box[8];
        bool dia1 = box[0] == box[4] && box[4] == box[8];
        bool dia2 = box[2] == box[4] && box[4] == box[6];
        return row1 || row2 || row3 || col1 || col2 || col3 || dia1 || dia2;
    }
void PrintGrid()
{
    // Outer loop runs once and waits for the inner loop to fully run before reiterating
    Console.WriteLine("---------");
    for (int row = 0; row < 3; row++)
    {
        for (int col = 0; col < 3; col++)
        {
            Console.Write("|");
            Console.Write(box[row * 3 + col] + "|");
        }
        Console.WriteLine("\n---------");
    }
}
int ChatGPT()
{
    for (int i = 0; i < box.Length; i++) // loop through the entire board
    {
        if (box[i] != "X" && box[i] != "O") // only accept spots that is not taken
        {
            string original = box[i]; // place the value to "original" string
            box[i] = "O"; // legitimately places an O to the current spot
            if (CheckVictory()) // if it is a victory it runs this V
            {
                box[i] = original; // the spot that has been placed with O gets changed into the original number it once had
                return i; // returns the current result (winning move)
            }
            box[i] = original; // the spot that has been placed with O gets changed into the original number it once had and move on to the next process
        }
    }
    for (int i = 0; i < box.Length; i++)
    {
        if (box[i] != "X" && box[i] != "O")
        {
            string original = box[i];
            box[i] = "X";
            if (CheckVictory())
            {
                box[i] = original;
                return i;
            }
            box[i] = original;
        }
    }
    if (box[4] != "X" && box[4] != "O")
        return 4;

    int[] corners = { 0, 2, 6, 8 };
    corners = corners.OrderBy(x => random.Next()).ToArray();
    foreach (int i in corners)
    {
        if (box[i] != "X" && box[i] != "O")
            return i;
    }

    int[] sides = { 1, 3, 5, 7 };
    sides = sides.OrderBy(x => random.Next()).ToArray();
    foreach (int i in sides)
    {
        if (box[i] != "X" && box[i] != "O")
            return i;
    }
    return -1;
}